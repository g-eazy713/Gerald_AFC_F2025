import { CreateType } from '@sinclair/typebox/build/esm/type/create/type.mjs';
import { Never } from '@sinclair/typebox/build/esm/type/never/index.mjs';
import { IntersectCreate } from '@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs';
// ------------------------------------------------------------------
// TypeGuard
// ------------------------------------------------------------------
import { IsTransform } from '@sinclair/typebox/build/esm/type/guard/kind.mjs';
/** `[Json]` Creates an evaluated Intersect type */
export function Intersect(types, options) {
    if (types.length === 1)
        return CreateType(types[0], options);
    if (types.length === 0)
        return Never(options);
    if (types.some((schema) => IsTransform(schema)))
        throw new Error('Cannot intersect transform types');
    return IntersectCreate(types, options);
}
